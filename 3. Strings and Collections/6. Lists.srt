1
00:00:01,000 --> 00:00:06,000
Python lists such as those returned by the string's split method are sequences of objects.

2
00:00:06,000 --> 00:00:11,000
Unlike strings, lists are mutable in so far as the elements within them can be replaced or removed, and

3
00:00:11,000 --> 00:00:17,000
new elements can be inserted or appended. Lists are the workhorse of Python data structures.

4
00:00:17,000 --> 00:00:23,000
Literal lists are delimited by square brackets, and the items within the list separated by commas.

5
00:00:23,000 --> 00:00:31,000
Here is a list of three numbers and a list of three strings. We can retrieve elements by using square brackets

6
00:00:31,000 --> 00:00:36,000
with a zero-based index, and we can replace elements by assigning to a specific element.

7
00:00:36,000 --> 00:00:41,000
See how lists can be heterogeneous with respect to the types of the objects.

8
00:00:41,000 --> 00:00:45,000
We now have a list containing a string, an integer, and another string.

9
00:00:45,000 --> 00:00:50,000
It's often useful to create an empty list, which we can do using empty square brackets.

10
00:00:50,000 --> 00:00:56,000
We can modify the list in other ways. Let's add some floats to the end of the list using the append method.

11
00:00:56,000 --> 00:01:00,000
There are many other useful methods for manipulating lists, which we'll cover in a later module.

12
00:01:00,000 --> 00:01:06,000
There is also a list constructor, which can be used to create lists from other collections such as strings.

13
00:01:06,000 --> 00:01:11,000
Finally, although the significant whitespace rules in Python can at first seem very rigid, there is a

14
00:01:11,000 --> 00:01:17,000
lot of flexibility. For example, if at the end of the line brackets, braces, or parentheses are unclosed,

15
00:01:17,000 --> 00:01:23,000
you can continue on the next line. This can be very useful for long literal collections or simply to improve

16
00:01:23,000 --> 00:01:28,000
readability. See also how we're allowed to use an additional comma after the last element, an important

17
00:01:28,000 --> 00:59:00,000
maintainability feature.

