1
00:00:01,000 --> 00:00:05,000
In this last section, we'll take a look at how to install third-party Python code into your installation.

2
00:00:05,000 --> 00:00:09,000
There are a number of ways to do this, and we'll cover three of the most common:

3
00:00:09,000 --> 00:00:14,000
Distutils, easy_install, and pip. We won't cover them in great detail, but we'll look at basic usage,

4
00:00:14,000 --> 00:00:19,000
and you'll learn enough to use them for straightforward installation purposes.

5
00:00:19,000 --> 00:00:24,000
The first option, distutils, we saw in the previous section when we created a setup.py and used the install

6
00:00:24,000 --> 00:00:31,000
option. Almost all Python projects include a setup.py, so knowing how to use it is invaluable if some of

7
00:00:31,000 --> 00:00:36,000
the other more convenient methods fail. Since we covered distutils in the previous section, there's

8
00:00:36,000 --> 00:00:45,000
no real need to go over it here. Just remember the basic python setup.py install command.

9
00:00:45,000 --> 00:00:50,000
The other two tools we'll look at are easy_install and pip. Both of these tools do essentially the same thing.

10
00:00:50,000 --> 00:00:56,000
They search for packages in a central repository, the Python package index or PyPI, also known by the nickname

11
00:00:56,000 --> 00:01:02,000
cheeseshop, and then download and install them along with their dependencies.

12
00:01:02,000 --> 00:01:09,000
You can browse the cheeseshop at pypi.python.org/pypi. This is an extremely convenient way to install

13
00:01:09,000 --> 00:01:14,000
Python software, so it's good to understand how to use it. To use these tools, we need to first make sure

14
00:01:14,000 --> 00:01:20,000
they're installed. Fortunately, if you can install easy_install, you can use it to install pip, so we'll

15
00:01:20,000 --> 00:01:22,000
install easy_install first.

16
00:01:22,000 --> 00:01:27,000
Start a new command prompt, and go to the palindrome directory that you created earlier.

17
00:01:27,000 --> 00:01:32,000
You should have a virtual environment there in the venv directory, so let's activate that now.

18
00:01:32,000 --> 00:01:37,000
Once you've activated the environment, you need to download distribute_setup.py into your palindrome

19
00:01:37,000 --> 00:01:47,000
directory. This script can be used to install the easy_install tools, so let's do that now.

20
00:01:47,000 --> 00:01:51,000
Once you have easy_install installed, you can use it to install other third-party software.

21
00:01:51,000 --> 00:01:58,000
The basic syntax for installing via easy_install is easy_install followed by the package's name.

22
00:01:58,000 --> 00:02:04,000
So, for example, to install the eagertools package, you can simply run easy_install eagertools.

23
00:02:04,000 --> 00:02:10,000
As you can see, this goes to the Python package index, downloads a tarball, runs its setup.py to create

24
00:02:10,000 --> 00:02:15,000
a binary distribution, and then copies that distribution into your virtual environment's site-packages

25
00:02:15,000 --> 00:02:22,000
directory. If you now run Python, you'll see that you can import eagertools.

26
00:02:22,000 --> 00:02:26,000
Now that we've got easy_install working, we can use it to install pip.

27
00:02:26,000 --> 00:02:30,000
Just as we did with the eagertools, we just run a simple command.

28
00:02:30,000 --> 00:02:35,000
In this case, the installation is a bit more involved. In particular, we see that easy_install not only

29
00:02:35,000 --> 00:02:41,000
installed a module in the site-packages, but it also installed the pip executable into the bin directory.

30
00:02:41,000 --> 00:02:45,000
With pip installed, you should be pretty comfortable with how to use easy_install.

31
00:02:45,000 --> 00:02:48,000
So, now we'll switch to using pip to do one final installation.

32
00:02:48,000 --> 00:02:54,000
For this example, we'll install the nose testing tool. Nose is a sort of power tool for running unittest-

33
00:02:54,000 --> 00:02:58,000
based tests such as those we've been developing in this module.

34
00:02:58,000 --> 00:03:02,000
One really useful thing it can do is discover all of your tests and run them.

35
00:03:02,000 --> 00:03:05,000
This means that you don't need to add unittest. main into your code.

36
00:03:05,000 --> 00:03:11,000
You could just use nose to find and run your tests. So, let's use pip to install nose.

37
00:03:11,000 --> 00:03:20,000
Pip uses subcommands to decide what to do, and to install modules you use pip install &lt;package name&gt;.

38
00:03:20,000 --> 00:03:24,000
We see quite a bit happening here, much of it having to do with making sure that nose is ready to run on our

39
00:03:24,000 --> 00:03:31,000
Python installation. In the end though, it installs the nose module as we can see.

40
00:03:31,000 --> 00:03:36,000
More interestingly, it installs the nosetests program in the bin directory.

41
00:03:36,000 --> 00:59:00,000
To really put the icing on the cake, let's use nosetests to run the tests in palindrome.py.

