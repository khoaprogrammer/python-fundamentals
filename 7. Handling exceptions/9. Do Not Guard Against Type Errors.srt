1
00:00:01,000 --> 00:00:06,000
We tend to not protect against TypeErrors in Python. To do so runs against the grain of dynamic typing in

2
00:00:06,000 --> 00:00:09,000
Python and limits the reuse potential of the code that we write.

3
00:00:09,000 --> 00:00:14,000
For example, we could test whether an argument was an int using the built-in isinstance function and raise

4
00:00:14,000 --> 00:00:20,000
a TypeError exception if it was not, but then we'd also want to allow arguments that are instances of float

5
00:00:20,000 --> 00:00:26,000
as well. It soon gets complicated if we want to check whether our function will work with types such as rational,

6
00:00:26,000 --> 00:00:31,000
complex, or any other kind of number. And in any case, who's to say that it does?

7
00:00:31,000 --> 00:00:37,000
Alternatively, we could intercept TypeError inside our square root function and re-raise it, but to what end?

8
00:00:37,000 --> 00:00:41,000
Usually in Python it's not worth adding type checking to your functions.

9
00:00:41,000 --> 00:00:45,000
If a function works with a particular type, even one you couldn't have known about when you designed your

10
00:00:45,000 --> 00:00:47,000
function, then that's all to the good.

11
00:00:47,000 --> 00:00:53,000
If not, execution will probably result in a TypeError anyway. Likewise, we tend to not catch TypeErrors

12
00:00:53,000 --> 00:59:00,000
very frequently either.

