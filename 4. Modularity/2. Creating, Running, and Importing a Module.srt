1
00:00:01,000 --> 00:00:08,000
Let's start with the snippet we worked with last time. Open a text editor, preferably one with syntax

2
00:00:08,000 --> 00:00:12,000
highlighting support for Python, and configure it to insert four spaces per indent level when you press the

3
00:00:12,000 --> 00:00:18,000
tab key. You should also check that your editor saves the file using the UTF-8 encoding as that's what the

4
00:00:18,000 --> 00:00:25,000
Python 3 runtime expects by default. Let's get the snippet we wrote at the REPL at the end of the previous

5
00:00:25,000 --> 00:00:34,000
module into a text file called words.py. All Python source files use the .py extension.

6
00:00:34,000 --> 00:00:39,000
Now we're using a text file for our code, we can pay a little more attention to readability.

7
00:00:39,000 --> 00:00:54,000
Let's put a blank line after the import statement. Save the file in a directory called pyfund in your home directory.

8
00:00:54,000 --> 00:00:59,000
Switch to a console with your operating system shell prompt and change to the new pyfund directory.

9
00:00:59,000 --> 00:01:06,000
We can execute our module simply by calling python3 and passing the module's filename.

10
00:01:06,000 --> 00:01:10,000
When you press return, after a short delay, you'll be returned to the system prompt.

11
00:01:10,000 --> 00:01:16,000
Not very impressive, but if you got no response, the program is running as expected.

12
00:01:16,000 --> 00:01:22,000
If, on the other hand, you got an error, an HTTP error indicates there's a network problem

13
00:01:22,000 --> 00:01:25,000
while other types of error probably mean you mistyped the code.

14
00:01:25,000 --> 00:01:36,000
Let's add another for loop to the end of the program to print out one word per line.

15
00:01:36,000 --> 00:01:41,000
This is much better. Now we have the beginnings of a useful program.

16
00:01:41,000 --> 00:01:46,000
Our module can also be imported into the REPL. Let's try that and see what happens.

17
00:01:46,000 --> 00:01:54,000
Start the REPL and import your module. When importing, we omit the file extension.

18
00:01:54,000 --> 00:02:02,000
The code in your module is executed immediately when imported, maybe not what you'd expected and not very useful.

19
00:02:02,000 --> 00:02:07,000
To give us more control over when our code is executed and to allow it to be reused, we'll need to put our

20
00:02:07,000 --> 00:59:00,000
code in a function.

